<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2016 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://levelsbeyond.com/schema/workflow"
    xsi:schemaLocation="http://levelsbeyond.com/schema/workflow http://www.levelsbeyond.com/schema/latest/studio.xsd"
    xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
    id="restoreAsset"
    name="Restore Asset"
    description=""
    
    executionLabelExpression="Restore Asset | Restoring ${subject.name} "
    deadlineExpression=""
    subjectDOClassName="AssetMaster"
    showInUserInterface="true"
    
    
    sdkVersion="5.4">
    
    <initialStepName>Check If Truncated</initialStepName>
    
    <!-- Is asset truncated? -->
    <!-- ${mezzContent.truncatedFlag == true AND mezzContent.restoreKey != null AND !mezzContent.restoreKey.equals('') AND #fileExists(mezzContent.restoreKey)} -->
    <noopStep name="Check If Truncated"
        executionLabelExpression="Truncated Flag is ${mezzContent.truncatedFlag}">
        <transition condition="${mezzContent.truncatedFlag == true AND mezzContent.restoreKey != null AND !mezzContent.restoreKey.equals('') AND #fileExists(mezzContent.restoreKey)}" >
            <targetStepName>Restore File</targetStepName>
        </transition>
        <transition condition="${mezzContent.truncatedFlag == false OR mezzContent.truncatedFlag == null}">
            <targetStepName>Not Archived</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>Error State</targetStepName>
        </transition>
    </noopStep>
    
    <!-- Copy File back to Repo -->
    <runCommandStep name="Restore File"
        executablePathExpression="/bin/cp"
        executionLabelExpression="Restoring File: ${mezzContent.file.name}"
        nextStep="Remove Truncated Flag" >
        
        <arg>${mezzContent.restoreKey}</arg>
        <arg>${subject.file.absolutePath}</arg>
    </runCommandStep>
    
    <!-- Set Truncated Flag False -->
    <saveDataObjectStep name="Remove Truncated Flag"
        dataObjectExpression="${mezzContent}"
        executionLabelExpression="Setting truncatedFlag on ${mezzContent.file.name} to false"
        >
        
        
        <transition condition="${#fileExists(mezzContent.file.absolutePath)}">
            <targetStepName>Confirmed Restore</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>Reindex</targetStepName>
        </transition>
        <property name="truncatedFlag">false</property>
    </saveDataObjectStep>
    
    <noopStep name="Confirmed Restore" nextStep="Reindex"></noopStep>
    
    <!-- Reindex -->
    <raiseWorkflowEventStep name="Reindex"
        eventTypeExpression="ensureIndexed"
        executionLabelExpression="Ensure Asset Indexed" 
        >
        
        <transition condition="true">
            <targetStepName>end</targetStepName>
        </transition>
        <property name="indexTargetRef">${subject}</property>   
    </raiseWorkflowEventStep>
    
    <failWorkflowStep reasonExpression="The Asset has an unrecognized Archive State" name="Error State" executionLabelExpression="The Asset has an unrecognized Archive State"></failWorkflowStep>
    
    <noopStep name="Not Archived"
        executionLabelExpression="The asset, ${subject.name}, is not archived"
        nextStep="end"></noopStep>
    
    <noopStep name="end"/>
    
    <contextDataDef name="mezzContent" dataType="Data Object" defaultDataExpression="${subject.mezzanine}"/>
    
</workflow>