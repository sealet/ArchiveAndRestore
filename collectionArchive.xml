<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2016 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://levelsbeyond.com/schema/workflow"
    xsi:schemaLocation="http://levelsbeyond.com/schema/workflow http://www.levelsbeyond.com/schema/latest/studio.xsd"
    xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
    id="collectionArchive"
    name="Collection Archive"
    description=""
    
    executionLabelExpression="Collection Archive | Collection name: ${subject.name}"
    deadlineExpression=""
    subjectDOClassName="AssetCollection"
    showInUserInterface="true"
    
    
    sdkVersion="5.4">
    
    <initialStepName>Set Assets for Archive</initialStepName>
    
    <!-- Set the list of assets to be archived or backed up -->
    <groovyStep name="Set Assets for Archive" resultDataDef="itemList" 
        executionLabelExpression="Found ${subject.numItems} in Collection"
        nextStep="Log Names of Assets">
        <script>
            <![CDATA[
                
                itemList = assetList;
                itemList.addAll(timelineList);
                
                return itemList;
                
            ]]>
        </script>
    </groovyStep>

    <testStep name="Log Names of Assets" devStep="true"
        outputExpression="${itemList.name}"
        nextStep="Split Collection Items"></testStep>

    <!-- Kick off subflow for each item in the collection -->
    <executeSubflowStep name="Split Collection Items"
        executionLabelExpression="Performing Archive/Backup on ${itemList.size()} assets"
        targetWorkflowId="singleAssetArchive"
        subjectChangePath="${itemList}"
        nextStep="end">
        
        <subflowContextDataMapping parentDataDef="operation" subflowDataDef="operation"/>
        <subflowContextDataMapping parentDataDef="overwrite" subflowDataDef="overwrite"/>
    </executeSubflowStep>
    
    <noopStep name="end"/>
    
    <!-- User Input Data Defs -->
    <contextDataDef name="operation" dataType="String" userInput="true" label="Archive or Backup" required="true">
        <picklist>
            <picklistItem value="archive" label="Archive" />
            <picklistItem value="backup" label="Backup"/>
        </picklist>
    </contextDataDef>
    
    <contextDataDef name="overwrite" dataType="Boolean" userInput="true" label="Overwrite Existing Archived File?"/>
    
    <!-- Internal Data Defs -->
    <contextDataDef name="itemList" dataType="Data Object" multiple="true"/>
    <contextDataDef name="assetList" dataType="Data Object" multiple="true" defaultDataExpression="${subject.assetItems.asset}"/>
    <contextDataDef name="timelineList" dataType="Data Object" multiple="true" defaultDataExpression="${subject.timelineItems.timeline.mainVideoAsset}"/>
    
    
</workflow>